The Catalan Number (number of shapes a tree can make) is:

F(n) = ((2*n)Cn) / (n + 1)

where n is the number of nodes in the binary tree

Example: 

F(5) = ((2 * 5)C 5) / (5 + 1)
	 = (10C5) / 6
	 = (10 * 9 * 8 * 7 * 6) / (5 * 4 * 3 * 2) / 6
	 = 2 * 3 * 2 * 7
F(5)= 42

We can also use the formula of T(n) = sum(min = 1, max = n, T(i - 1) * T(n - i))


The number of trees at max height that can be generated by a binary tree of size n is 2 ^ (n - 1)
Examples:
let H(n) = 2 ^ (n - 1)

H(1) = 2 ^ (1 - 1)
	 = 1

H(2) = 2 ^ (2 - 1)
	 = 2

...etc etc

When trying to find the number of permutations that any tree can take we can use the formula

P(n) = num_shapes * num permutations
P(n) = ((2 * n)Cn) / (n + 1) * n!


The formula to calculate the min and max number of nodes and the height is given in any Binary tree can be expressed with the formula
min nodes n = height(tree) + 1
max nodes n = 2 ^ (height(tree) + 1) - 1

to calculate the min and max height of a strict binary tree
min nodes n = 2(h) + 1
max nodes n = 2^(h + 1) - 1

to calculate the min and max for any strict n-ary tree
min nodes n = height(tree) * degree(tree) + 1
max nodes n = (degree(tree) ^ (height(tree) + 1) - 1) / (m - 1)

if the height is NOT given

max height height = n - 1
(the maximum height will always be a line of nodes where each node excluding the leaf has a single child)

min height n = 2 ^ (height(tree) + 1) - 1
		   n + 1 = 2 ^ (height(tree) + 1)
		   log2(n + 1) = height(tree) + 1
		   height(tree) = log2(n + 1) - 1
(every branch node has 2 children)

for a strict binary tree:
min height h = log2(n + 1) - 1	(rearranged max nodes)
max height h = (n - 1) / 2		(rearranged min nodes)

for a strict n-ary tree

let d = degree(tree)
let h = height(tree)

min height	n = (d ^ (h + 1) - 1) / (d - 1)
			h = logd(n(d - 1) + 1) - 1 

max height n = (d ^ (h + 1) - 1) / (d - 1)
		   h = (n - 1) / d

Iterating a binary tree naturally can range from complexities of O(log2(n)) and O(n)?

Binary Tree Rules:

Number of nodes with a degree of 2 (2 direct children) is ALWAYS equal to the number of leafs (degree 0) minus 1
deg(2) = deg(0) - 1

A strict binary tree is a binary tree which only has nodes of degree 0 or degree 2